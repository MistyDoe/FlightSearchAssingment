// <auto-generated />
using System;
using FlightSearchAssingment.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightSearchAssingment.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221128171039_FullInitialShema")]
    partial class FullInitialShema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("FlightSearchAssingment.Models.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Arrival")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Departure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FlightId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FlightSearchAssingment.Models.Prices", b =>
                {
                    b.Property<int>("PricesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdultPrice")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChildPrice")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PricesId");

                    b.ToTable("PriceList");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Prices");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("FlightSearchAssingment.Models.Itenerary", b =>
                {
                    b.HasBaseType("FlightSearchAssingment.Models.Prices");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("FlightId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IteneraryID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PriceListPricesId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("FlightId");

                    b.HasIndex("PriceListPricesId");

                    b.HasDiscriminator().HasValue("Itenerary");
                });

            modelBuilder.Entity("FlightSearchAssingment.Models.Itenerary", b =>
                {
                    b.HasOne("FlightSearchAssingment.Models.Flight", "flight")
                        .WithMany("Iteneraries")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightSearchAssingment.Models.Prices", "PriceList")
                        .WithMany("Iteneraties")
                        .HasForeignKey("PriceListPricesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceList");

                    b.Navigation("flight");
                });

            modelBuilder.Entity("FlightSearchAssingment.Models.Flight", b =>
                {
                    b.Navigation("Iteneraries");
                });

            modelBuilder.Entity("FlightSearchAssingment.Models.Prices", b =>
                {
                    b.Navigation("Iteneraties");
                });
#pragma warning restore 612, 618
        }
    }
}
